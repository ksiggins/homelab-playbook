---
- name: Fully update the system (all packages)
  yum:
    name: '*'
    state: latest
    update_cache: true

- name: Remove old kernels (keep 2)
  command: package-cleanup --oldkernels --count=2
  when: ansible_distribution_major_version | int < 9
  args:
    warn: false
  register: kernel_cleanup
  changed_when: "'removed' in kernel_cleanup.stdout"

- name: Remove orphaned packages (leaf packages not required anymore)
  command: package-cleanup --leaves --quiet | xargs yum -y remove
  when: ansible_distribution_major_version | int < 9
  args:
    warn: false
  ignore_errors: true

- name: Remove unneeded packages (autoremove)
  yum:
    autoremove: yes
    state: absent

- name: Install EPEL release package
  yum:
    name: epel-release
    state: present

- name: Disable EPEL repo by modifying the repo file
  ini_file:
    path: /etc/yum.repos.d/epel.repo
    section: epel
    option: enabled
    value: '0'
    no_extra_spaces: true
  when: ansible_distribution_major_version | int >= 8

- name: Install packages via yum (EPEL packages separately with enablerepo)
  yum:
    name:
      - qemu-guest-agent
      - xterm
      - vim
      - tree
      - yum-utils
      - git
      - python3
      - python3-pip
      - httpd-tools
      - iputils
      - openssh-server
  # EPEL is disabled globally, so this is fine

- name: Install from EPEL enabled repo
  yum:
    name: neofetch
    enablerepo: epel

- name: Check if reboot is required
  command: needs-restarting -r
  ignore_errors: true
  register: needs_restart_result
  changed_when: needs_restart_result.rc == 1
  failed_when: needs_restart_result.rc > 1

- name: Reboot if required
  reboot:
    msg: "Reboot triggered due to package update"
    connect_timeout: 5
    reboot_timeout: 600
    test_command: whoami
  when: needs_restart_result.rc == 1
